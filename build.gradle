/*
 * This file is part of Gravity Box.
 *
 * Gravity Box is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Gravity Box is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Gravity Box.  If not, see <https://www.gnu.org/licenses/>.
 */

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$androidPluginVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadowVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.mobidevelop.robovm:robovm-gradle-plugin:$robovmVersion"
        classpath "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        classpath "com.google.gms:google-services:$googleServicesVersion"
        classpath "io.fabric.tools:gradle:$firebaseCrashlyticsPluginVersion"
        classpath "com.google.firebase:perf-plugin:$firebasePerformancePluginVersion"
    }
}

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
}

configure(subprojects - project(':android')) {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java-library'
    apply plugin: 'kotlin'
    sourceCompatibility = 1.7
    compileJava {
        options.incremental = true
    }
}

subprojects {
    version = '1.4.7'
    ext.appName = 'gravity-box'
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://jitpack.io' }
    }
}

// Clearing Eclipse project data in root folder:
tasks.eclipse.doLast {
    delete '.project'
    delete '.classpath'
    delete '.settings/'
}

@SuppressWarnings(["LibGDXGradleTestId", "unused"])
def getLocalProperty(String propertyName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propertyName] == null) {
            if (propertyName == "admob.appid") {
                // Debug App ID
                return "ca-app-pub-6425347832770094~4463370956"
            } else if (propertyName == "admob.interstitial.adunitid") {
                // Debug interstitial ad unit ID
                return "ca-app-pub-3940256099942544/1033173712"
            } else if (propertyName == "admob.rewarded.adunitid") {
                // Debug rewarded ad unit ID
                return "ca-app-pub-3940256099942544/5224354917"
            } else if(propertyName=="encryption.secretkey") {
                // Debug Encryption Key
                return "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkIRWeoP1ok65+lODfEqxxkQ1nlqHHuP1Kz5kKu/ah5kXJeF+YIw45kcOksx6yPuNuwfC8RToQfeeG88Fpvj2RoH1epcWqurrubmcgLjJ5b06W9nI4zqZKu1DIZrzBDLrBcZCzzZJXvb6XJhMrxeK1jlqHqmpjZBUwUBiiuHZ94lswntDYSVIzQNyFBqZASzU+MbnqUbPlji7QVEjZiGXM6VZ7HEIa86X7maiaL9VP0d2SdSSxg8wkdkO3/aSsatbaPmrTi7VPxwbZZqi0EuNj4OigL36ozbi7PEbTtglcbk4E7RG07gG1TmpZhQhJqfqGQBC/8agZwAw99Hv0DeZlQIDAQAB"
            }
            else {
                return ""
            }
        } else {
            return props[propertyName]
        }
    }
}